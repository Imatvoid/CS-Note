#!/bin/bash

# [a-z0-9_]+ @[a-z0-9]+\.[a-z]+
regex_mail=[a-z0-9_]+ @[a-z0-9]+\.[a-z]+

# 0次或者一次
# 文本
regex_word=( ?[a-zA-Z]+ ?)


#简单的检测可能的ip地址 注意这不是校验
regex_ip=[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}


# ^ 行起始标记           ^tux 匹配以tux起始的行
# $ 行尾标记             tux$ 匹配以tux结尾的行
# . 匹配任意一个字符      Hack.匹配Hackl和Hacki，但是不能匹配Hackl2和Hackil， 它只能匹配单个字符
# [] 匹配包含在 [字符] 之中的任意一个字符  coo[kl] 匹配cook或cool
# [^] 匹配除 [^字符] 之外的任意一个字符   9[^01] 匹配92、93，但是不匹配91或90
# [-] 匹配 [] 中指定范围内的任意一个字符  [1-5] 匹配从1~5的任意一个数字
# ? 匹配之前的项1次或0次                colou?r 匹配color或colour，但是不能匹配colouur 
# + 匹配之前的项1次或多次               Rollno-9+ 匹配Rollno-99、Rollno-9，但是不能匹配Rollno-
# * 匹配之前的项0次或多次               co*l 匹配cl、col、coool等
# () 创建一个用于匹配的子串             ma(tri)?x 匹配max或maxtrix
# {n} 匹配之前的项n次                  [0-9]{3} 匹配任意一个三位数，[0-9]{3}可以扩展为 [0-9][0-9][0-9]
# {n,} 之前的项至少需要匹配n次          [0-9]{2,} 匹配任意一个两位或更多位的数字
# {n,m} 指定之前的项所必需匹配的最小次数和最大次数    [0-9]{2,5} 匹配从两位数到五位数之间的任意一个数字
# | 交替——匹配 | 两边的任意一项            Oct (1st | 2nd) 匹配Oct 1st或Oct 2nd
# \ 转义符可以将上面介绍的特殊字符进行转义  a\.b匹配a.b，但不能匹配ajb。通过在.之间加上前缀 \ ，
#http://www.linuxforu.com/2011/04/sed-explained-part-1/。

#  可视化 https://regexper.com/



